node{
     
    stage('SCM Checkout'){
        git url:  'https://github.com/arijitslg1/spring-boot-mongo-docker.git',branch: 'master'
    }
    
    stage(" Maven Clean Package"){
  //    def mavenHome =  tool name: "Maven-3.6.1", type: "maven"
  //    def mavenCMD = "${mavenHome}/bin/mvn"
      sh "mvn clean package"
      
    } 
    
    
    stage('Build Docker Image'){
        sh 'docker rmi -f arijitslg1/spring-boot-mongo'
        sh 'docker build -t arijitslg1/spring-boot-mongo .'
    }
    
    stage('Push Docker Image'){
        withCredentials([string(credentialsId: 'DOCKER_HUB_PASSWORD', variable: 'DOCKER_HUB_PASSWORD')]) {
          sh "docker login -u pkw0301 -p ${DOCKER_HUB_PASSWORD}"
        }
        sh 'docker push pkw0301/spring-boot-mongo'
     }
     
     
     stage("Deploy To Kuberates Cluster"){
        kubernetesDeploy(
         configs: 'springBootMongo.yml', 
         kubeconfigId: 'KUBERNETES_CLUSTER_CONFIG',
         enableConfigSubstitution: true
        )
     }
	 
	  /**
      stage("Deploy To Kuberates Cluster"){
        sh 'kubectl delete rc spring-controller mongo-controller'
        sh 'kubectl apply -f pringBootMongo.yml'
      } **/
     
}


